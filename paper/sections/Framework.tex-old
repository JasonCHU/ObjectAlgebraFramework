\section{Object Algebras Framework}

Users still need to write generic queries and transformation by hand. It will be great if these boilerplate codes can be generated automatically. 
Solution: Object Algebra Framework
Java annotation tool

\begin{lstlisting}[numbers=none] 
@Algebra
public interface ExpAlg<Exp> {
	Exp Var(String s);
	Exp Lit(int i);
	Exp Add(Exp e1, Exp e2);
}
\end{lstlisting}

With the annotation "`Algebra"', the framework will generate the boilerplate codes for us automatically. 
Generic Query using monoid
Generic Acceptors
Generic transformation with acceptor interfaces

Furthermore, the monoid interface is also included in the Object Algebras Framework

For query, only need to write interesting cases, for example, the return free variable names, and the specific monoid needed, which in Free Variables case will be A String List Monoid.
%!PS-Adobe-2.0
%%Creator: gnuplot 5.0 patchlevel rc3
%%CreationDate: Mon Dec 15 13:49:28 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Apr 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel rc3)
  /Author (tvdstorm)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Dec 15 13:49:28 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
770 448 M
6177 0 V
stroke
LTb
770 448 M
63 0 V
6114 0 R
-63 0 V
stroke
686 448 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
770 1137 M
6177 0 V
stroke
LTb
770 1137 M
63 0 V
6114 0 R
-63 0 V
stroke
686 1137 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.01)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
770 1825 M
6177 0 V
stroke
LTb
770 1825 M
63 0 V
6114 0 R
-63 0 V
stroke
686 1825 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.02)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
770 2514 M
6177 0 V
stroke
LTb
770 2514 M
63 0 V
6114 0 R
-63 0 V
stroke
686 2514 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.03)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
770 3202 M
6177 0 V
stroke
LTb
770 3202 M
63 0 V
6114 0 R
-63 0 V
stroke
686 3202 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.04)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
770 3891 M
84 0 V
2007 0 R
4086 0 V
stroke
LTb
770 3891 M
63 0 V
6114 0 R
-63 0 V
stroke
686 3891 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.05)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
770 4579 M
6177 0 V
stroke
LTb
770 4579 M
63 0 V
6114 0 R
-63 0 V
stroke
686 4579 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.06)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
770 448 M
0 4131 V
stroke
LTb
770 448 M
0 63 V
0 4068 R
0 -63 V
stroke
770 308 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
1652 448 M
0 3348 V
0 720 R
0 63 V
stroke
LTb
1652 448 M
0 63 V
0 4068 R
0 -63 V
stroke
1652 308 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20000)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
2535 448 M
0 3348 V
0 720 R
0 63 V
stroke
LTb
2535 448 M
0 63 V
0 4068 R
0 -63 V
stroke
2535 308 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 40000)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
3417 448 M
0 4131 V
stroke
LTb
3417 448 M
0 63 V
0 4068 R
0 -63 V
stroke
3417 308 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 60000)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
4300 448 M
0 4131 V
stroke
LTb
4300 448 M
0 63 V
0 4068 R
0 -63 V
stroke
4300 308 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 80000)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
5182 448 M
0 4131 V
stroke
LTb
5182 448 M
0 63 V
0 4068 R
0 -63 V
stroke
5182 308 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 100000)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
6065 448 M
0 4131 V
stroke
LTb
6065 448 M
0 63 V
0 4068 R
0 -63 V
stroke
6065 308 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 120000)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
LCb setrgbcolor
6947 448 M
0 4131 V
stroke
LTb
6947 448 M
0 63 V
0 4068 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 140000)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
770 4579 N
770 448 L
6177 0 V
0 4131 V
-6177 0 V
Z stroke
1.000 UP
1.000 UL
LTb
112 2513 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (Running time \(s\))]
] -60.0 MCshow
grestore
3858 98 M
[ [(Helvetica) 180.0 0.0 true true 0 (Input size \(bytes\))]
] -60.0 MCshow
LCb setrgbcolor
3858 4829 M
[ [(Helvetica) 180.0 0.0 true true 0 (Type environment)]
] -60.0 MCshow
% Begin plot #1
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
2150 4426 M
[ [(Helvetica) 180.0 0.0 true true 0 (AST)]
] -60.0 MRshow
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
818 449 Pls
872 450 Pls
926 452 Pls
981 453 Pls
1035 454 Pls
1089 457 Pls
1143 457 Pls
1197 459 Pls
1252 460 Pls
1306 461 Pls
1364 465 Pls
1422 466 Pls
1480 466 Pls
1538 467 Pls
1596 469 Pls
1655 476 Pls
1713 471 Pls
1771 482 Pls
1829 474 Pls
1888 478 Pls
1946 480 Pls
2004 495 Pls
2063 499 Pls
2120 484 Pls
2179 487 Pls
2237 487 Pls
2295 598 Pls
2354 490 Pls
2411 493 Pls
2470 502 Pls
2528 495 Pls
2587 505 Pls
2645 510 Pls
2703 500 Pls
2761 500 Pls
2819 505 Pls
2877 501 Pls
2936 512 Pls
2994 586 Pls
3053 523 Pls
3111 530 Pls
3169 518 Pls
3227 520 Pls
3285 534 Pls
3343 537 Pls
3402 581 Pls
3460 530 Pls
3518 536 Pls
3576 534 Pls
3634 676 Pls
3693 572 Pls
3751 543 Pls
3809 535 Pls
3868 562 Pls
3926 540 Pls
3984 544 Pls
4042 542 Pls
4100 551 Pls
4159 549 Pls
4217 566 Pls
4275 558 Pls
4333 556 Pls
4391 709 Pls
4450 568 Pls
4508 554 Pls
4566 561 Pls
4625 569 Pls
4683 561 Pls
4741 568 Pls
4799 566 Pls
4857 562 Pls
4916 561 Pls
4974 582 Pls
5032 578 Pls
5090 581 Pls
5149 589 Pls
5207 583 Pls
5265 604 Pls
5323 591 Pls
5382 604 Pls
5440 591 Pls
5498 639 Pls
5556 609 Pls
5614 603 Pls
5673 612 Pls
5731 668 Pls
5789 621 Pls
5847 675 Pls
5906 638 Pls
5964 629 Pls
6022 634 Pls
6081 677 Pls
6139 687 Pls
6197 645 Pls
6255 625 Pls
6313 635 Pls
6371 648 Pls
6430 628 Pls
6488 648 Pls
6546 641 Pls
2505 4426 Pls
% End plot #1
% Begin plot #2
3.000 UL
LTa
2150 4246 M
[ [(Helvetica) 180.0 0.0 true true 0 (Linear \(AST\))]
] -60.0 MRshow
3.000 UL
LTa
2258 4246 M
495 0 V
818 450 M
58 2 V
58 2 V
58 2 V
57 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
57 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
57 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
57 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
57 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
57 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
57 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
57 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
57 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
57 3 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
57 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
57 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
57 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
58 2 V
57 2 V
58 2 V
% End plot #2
% Begin plot #3
1.000 UP
stroke
1.000 UL
LTb
LCb setrgbcolor
2150 4066 M
[ [(Helvetica) 180.0 0.0 true true 0 (Shy)]
] -60.0 MRshow
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
818 450 Circle
872 451 Circle
926 453 Circle
981 455 Circle
1035 457 Circle
1089 459 Circle
1143 461 Circle
1197 465 Circle
1252 466 Circle
1306 481 Circle
1364 472 Circle
1422 474 Circle
1480 475 Circle
1538 479 Circle
1596 479 Circle
1655 481 Circle
1713 483 Circle
1771 484 Circle
1829 486 Circle
1888 497 Circle
1946 496 Circle
2004 553 Circle
2063 537 Circle
2120 503 Circle
2179 504 Circle
2237 507 Circle
2295 519 Circle
2354 518 Circle
2411 511 Circle
2470 515 Circle
2528 587 Circle
2587 526 Circle
2645 532 Circle
2703 529 Circle
2761 525 Circle
2819 541 Circle
2877 538 Circle
2936 541 Circle
2994 645 Circle
3053 548 Circle
3111 561 Circle
3169 647 Circle
3227 567 Circle
3285 557 Circle
3343 572 Circle
3402 571 Circle
3460 572 Circle
3518 604 Circle
3576 599 Circle
3634 584 Circle
3693 571 Circle
3751 575 Circle
3809 600 Circle
3868 586 Circle
3926 670 Circle
3984 583 Circle
4042 595 Circle
4100 622 Circle
4159 621 Circle
4217 610 Circle
4275 699 Circle
4333 609 Circle
4391 614 Circle
4450 641 Circle
4508 605 Circle
4566 606 Circle
4625 674 Circle
4683 615 Circle
4741 620 Circle
4799 621 Circle
4857 633 Circle
4916 657 Circle
4974 671 Circle
5032 656 Circle
5090 643 Circle
5149 674 Circle
5207 661 Circle
5265 708 Circle
5323 694 Circle
5382 674 Circle
5440 681 Circle
5498 685 Circle
5556 680 Circle
5614 687 Circle
5673 696 Circle
5731 696 Circle
5789 730 Circle
5847 711 Circle
5906 690 Circle
5964 4426 Circle
6022 714 Circle
6081 719 Circle
6139 746 Circle
6197 815 Circle
6255 719 Circle
6313 723 Circle
6371 709 Circle
6430 718 Circle
6488 835 Circle
6546 771 Circle
2505 4066 Circle
% End plot #3
% Begin plot #4
1.000 UL
LTb
LCb setrgbcolor
2150 3886 M
[ [(Helvetica) 180.0 0.0 true true 0 (Linear \(Shy\))]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
2258 3886 M
495 0 V
818 451 M
58 4 V
58 4 V
58 4 V
57 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
57 4 V
58 4 V
58 4 V
58 4 V
58 3 V
58 4 V
58 4 V
57 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
57 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
57 4 V
58 4 V
58 3 V
58 4 V
58 4 V
58 4 V
58 4 V
57 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
57 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
57 3 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
57 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
57 4 V
58 4 V
58 4 V
58 4 V
58 3 V
58 4 V
58 4 V
57 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
57 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
57 4 V
58 4 V
58 3 V
58 4 V
58 4 V
58 4 V
58 4 V
58 4 V
57 4 V
58 4 V
% End plot #4
stroke
2.000 UL
LTb
1.000 UL
LTb
770 4579 N
770 448 L
6177 0 V
0 4131 V
-6177 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
